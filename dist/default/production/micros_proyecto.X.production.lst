

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 25 12:34:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.36
    24                           ; Generated 28/01/2022 GMT
    25                           ; 
    26                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007DCD                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _interfaz
    64  007DCD  08                 	db	8
    65  0000                     _LATD1	set	31841
    66  0000                     _LATD0	set	31840
    67  0000                     _LATD	set	3980
    68  0000                     _TRISD	set	3989
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  007E34                     __pcinit:
    74                           	callstack 0
    75  007E34                     start_initialization:
    76                           	callstack 0
    77  007E34                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Initialize objects allocated to COMRAM (1 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82  007E34  0ECD               	movlw	low __pidataCOMRAM
    83  007E36  6EF6               	movwf	tblptrl,c
    84  007E38  0E7D               	movlw	high __pidataCOMRAM
    85  007E3A  6EF7               	movwf	tblptrh,c
    86  007E3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87  007E3E  6EF8               	movwf	tblptru,c
    88  007E40  0009               	tblrd		*+	;fetch initializer
    89  007E42  CFF5 F008          	movff	tablat,__pdataCOMRAM
    90  007E46                     end_of_initialization:
    91                           	callstack 0
    92  007E46                     __end_of__initialization:
    93                           	callstack 0
    94  007E46  0E00               	movlw	low (__Lmediumconst shr (0+16))
    95  007E48  6EF8               	movwf	tblptru,c
    96  007E4A  0100               	movlb	0
    97  007E4C  EF76  F03F         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	dataCOMRAM
   100  000008                     __pdataCOMRAM:
   101                           	callstack 0
   102  000008                     _interfaz:
   103                           	callstack 0
   104  000008                     	ds	1
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109  000001                     ??_RetardoLCD:
   110  000001                     ConfiguraLCD@a:
   111                           	callstack 0
   112                           
   113                           ; 1 bytes @ 0x0
   114  000001                     	ds	1
   115  000002                     RetardoLCD@a:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x1
   119  000002                     	ds	1
   120  000003                     ??_EnviaDato:
   121                           
   122                           ; 1 bytes @ 0x2
   123  000003                     	ds	1
   124  000004                     EnviaDato@a:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x3
   128  000004                     	ds	1
   129  000005                     EscribeLCD_c@a:
   130                           	callstack 0
   131  000005                     DireccionaLCD@a:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x4
   135  000005                     	ds	1
   136  000006                     ??_main:
   137                           
   138                           ; 1 bytes @ 0x5
   139  000006                     	ds	2
   140                           
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 6 in file "micros_proyecto.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;		None
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   160 ;;      Params:         0       0       0       0       0       0       0       0       0
   161 ;;      Locals:         0       0       0       0       0       0       0       0       0
   162 ;;      Temps:          2       0       0       0       0       0       0       0       0
   163 ;;      Totals:         2       0       0       0       0       0       0       0       0
   164 ;;Total ram usage:        2 bytes
   165 ;; Hardware stack levels required when called: 4
   166 ;; This function calls:
   167 ;;		_ConfiguraLCD
   168 ;;		_DireccionaLCD
   169 ;;		_EscribeLCD_c
   170 ;;		_InicializaLCD
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           	psect	text0
   177  007EEC                     __ptext0:
   178                           	callstack 0
   179  007EEC                     _main:
   180                           	callstack 27
   181                           
   182                           ;micros_proyecto.c: 7: TRISD=0;
   183                           
   184                           ;incstack = 0
   185  007EEC  0E00               	movlw	0
   186  007EEE  6E95               	movwf	149,c	;volatile
   187                           
   188                           ;micros_proyecto.c: 8: LATD=0;
   189  007EF0  0E00               	movlw	0
   190  007EF2  6E8C               	movwf	140,c	;volatile
   191                           
   192                           ;micros_proyecto.c: 9: _delay((unsigned long)((1000)*(1000000/4000.0)));
   193  007EF4  0E02               	movlw	2
   194  007EF6  6E07               	movwf	(??_main+1)^0,c
   195  007EF8  0E45               	movlw	69
   196  007EFA  6E06               	movwf	??_main^0,c
   197  007EFC  0EAA               	movlw	170
   198  007EFE                     u97:
   199  007EFE  2EE8               	decfsz	wreg,f,c
   200  007F00  D7FE               	bra	u97
   201  007F02  2E06               	decfsz	??_main^0,f,c
   202  007F04  D7FC               	bra	u97
   203  007F06  2E07               	decfsz	(??_main+1)^0,f,c
   204  007F08  D7FA               	bra	u97
   205                           
   206                           ;micros_proyecto.c: 10: ConfiguraLCD(4);
   207  007F0A  0E04               	movlw	4
   208  007F0C  EC0E  F03F         	call	_ConfiguraLCD
   209                           
   210                           ;micros_proyecto.c: 11: InicializaLCD();
   211  007F10  ECB2  F03F         	call	_InicializaLCD	;wreg free
   212                           
   213                           ;micros_proyecto.c: 13: EscribeLCD_c('H');
   214  007F14  0E48               	movlw	72
   215  007F16  EC03  F03F         	call	_EscribeLCD_c
   216                           
   217                           ;micros_proyecto.c: 14: EscribeLCD_c('o');
   218  007F1A  0E6F               	movlw	111
   219  007F1C  EC03  F03F         	call	_EscribeLCD_c
   220                           
   221                           ;micros_proyecto.c: 15: EscribeLCD_c('l');
   222  007F20  0E6C               	movlw	108
   223  007F22  EC03  F03F         	call	_EscribeLCD_c
   224                           
   225                           ;micros_proyecto.c: 16: EscribeLCD_c('a');
   226  007F26  0E61               	movlw	97
   227  007F28  EC03  F03F         	call	_EscribeLCD_c
   228                           
   229                           ;micros_proyecto.c: 17: EscribeLCD_c(' ');
   230  007F2C  0E20               	movlw	32
   231  007F2E  EC03  F03F         	call	_EscribeLCD_c
   232                           
   233                           ;micros_proyecto.c: 18: EscribeLCD_c('m');
   234  007F32  0E6D               	movlw	109
   235  007F34  EC03  F03F         	call	_EscribeLCD_c
   236                           
   237                           ;micros_proyecto.c: 19: EscribeLCD_c('u');
   238  007F38  0E75               	movlw	117
   239  007F3A  EC03  F03F         	call	_EscribeLCD_c
   240                           
   241                           ;micros_proyecto.c: 20: EscribeLCD_c('n');
   242  007F3E  0E6E               	movlw	110
   243  007F40  EC03  F03F         	call	_EscribeLCD_c
   244                           
   245                           ;micros_proyecto.c: 21: EscribeLCD_c('d');
   246  007F44  0E64               	movlw	100
   247  007F46  EC03  F03F         	call	_EscribeLCD_c
   248                           
   249                           ;micros_proyecto.c: 22: EscribeLCD_c('o');
   250  007F4A  0E6F               	movlw	111
   251  007F4C  EC03  F03F         	call	_EscribeLCD_c
   252                           
   253                           ;micros_proyecto.c: 23: DireccionaLCD(0xC0);
   254  007F50  0EC0               	movlw	192
   255  007F52  ECF8  F03E         	call	_DireccionaLCD
   256                           
   257                           ;micros_proyecto.c: 24: EscribeLCD_c('8');
   258  007F56  0E38               	movlw	56
   259  007F58  EC03  F03F         	call	_EscribeLCD_c
   260                           
   261                           ;micros_proyecto.c: 25: EscribeLCD_c(';');
   262  007F5C  0E3B               	movlw	59
   263  007F5E  EC03  F03F         	call	_EscribeLCD_c
   264  007F62                     l118:
   265  007F62  D7FF               	goto	l118
   266  007F64                     __end_of_main:
   267                           	callstack 0
   268                           
   269 ;; *************** function _InicializaLCD *****************
   270 ;; Defined at:
   271 ;;		line 71 in file "LibLCDXC8.h"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   285 ;;      Params:         0       0       0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used: 1
   291 ;; Hardware stack levels required when called: 3
   292 ;; This function calls:
   293 ;;		_BorraLCD
   294 ;;		_EnviaDato
   295 ;;		_HabilitaLCD
   296 ;;		_RetardoLCD
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text1
   303  007F64                     __ptext1:
   304                           	callstack 0
   305  007F64                     _InicializaLCD:
   306                           	callstack 27
   307                           
   308                           ;LibLCDXC8.h: 73: LATD0=0;
   309                           
   310                           ;incstack = 0
   311  007F64  908C               	bcf	3980,0,c	;volatile
   312                           
   313                           ;LibLCDXC8.h: 74: if(interfaz==4)
   314  007F66  0E04               	movlw	4
   315  007F68  1808               	xorwf	_interfaz^0,w,c
   316  007F6A  A4D8               	btfss	status,2,c
   317  007F6C  D004               	goto	l921
   318                           
   319                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
   320  007F6E  508C               	movf	140,w,c	;volatile
   321  007F70  0B0F               	andlw	15
   322  007F72  0930               	iorlw	48
   323  007F74  D001               	goto	L1
   324  007F76                     l921:
   325                           
   326                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
   327  007F76  0E3F               	movlw	63
   328  007F78                     L1:
   329  007F78  6E8C               	movwf	140,c	;volatile
   330                           
   331                           ;LibLCDXC8.h: 78: HabilitaLCD();
   332  007F7A  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   333                           
   334                           ;LibLCDXC8.h: 79: RetardoLCD(1);
   335  007F7E  0E01               	movlw	1
   336  007F80  EC4B  F03F         	call	_RetardoLCD
   337                           
   338                           ;LibLCDXC8.h: 80: if(interfaz==4)
   339  007F84  0E04               	movlw	4
   340  007F86  1808               	xorwf	_interfaz^0,w,c
   341  007F88  A4D8               	btfss	status,2,c
   342  007F8A  D004               	goto	l931
   343                           
   344                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
   345  007F8C  508C               	movf	140,w,c	;volatile
   346  007F8E  0B0F               	andlw	15
   347  007F90  0930               	iorlw	48
   348  007F92  D001               	goto	L2
   349  007F94                     l931:
   350                           
   351                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
   352  007F94  0E3F               	movlw	63
   353  007F96                     L2:
   354  007F96  6E8C               	movwf	140,c	;volatile
   355                           
   356                           ;LibLCDXC8.h: 84: HabilitaLCD();
   357  007F98  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   358                           
   359                           ;LibLCDXC8.h: 85: RetardoLCD(3);
   360  007F9C  0E03               	movlw	3
   361  007F9E  EC4B  F03F         	call	_RetardoLCD
   362                           
   363                           ;LibLCDXC8.h: 86: if(interfaz==4)
   364  007FA2  0E04               	movlw	4
   365  007FA4  1808               	xorwf	_interfaz^0,w,c
   366  007FA6  A4D8               	btfss	status,2,c
   367  007FA8  D004               	goto	l941
   368                           
   369                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
   370  007FAA  508C               	movf	140,w,c	;volatile
   371  007FAC  0B0F               	andlw	15
   372  007FAE  0930               	iorlw	48
   373  007FB0  D001               	goto	L3
   374  007FB2                     l941:
   375                           
   376                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
   377  007FB2  0E3F               	movlw	63
   378  007FB4                     L3:
   379  007FB4  6E8C               	movwf	140,c	;volatile
   380                           
   381                           ;LibLCDXC8.h: 90: HabilitaLCD();
   382  007FB6  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   383                           
   384                           ;LibLCDXC8.h: 91: RetardoLCD(4);
   385  007FBA  0E04               	movlw	4
   386  007FBC  EC4B  F03F         	call	_RetardoLCD
   387                           
   388                           ;LibLCDXC8.h: 92: if(interfaz==4){
   389  007FC0  0E04               	movlw	4
   390  007FC2  1808               	xorwf	_interfaz^0,w,c
   391  007FC4  A4D8               	btfss	status,2,c
   392  007FC6  D011               	goto	l961
   393                           
   394                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
   395  007FC8  508C               	movf	140,w,c	;volatile
   396  007FCA  0B0F               	andlw	15
   397  007FCC  0920               	iorlw	32
   398  007FCE  6E8C               	movwf	140,c	;volatile
   399                           
   400                           ;LibLCDXC8.h: 94: HabilitaLCD();
   401  007FD0  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   402                           
   403                           ;LibLCDXC8.h: 95: RetardoLCD(4);
   404  007FD4  0E04               	movlw	4
   405  007FD6  EC4B  F03F         	call	_RetardoLCD
   406                           
   407                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
   408  007FDA  0E2F               	movlw	47
   409  007FDC  EC28  F03F         	call	_EnviaDato
   410                           
   411                           ;LibLCDXC8.h: 97: HabilitaLCD();
   412  007FE0  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   413                           
   414                           ;LibLCDXC8.h: 98: RetardoLCD(4);
   415  007FE4  0E04               	movlw	4
   416  007FE6  EC4B  F03F         	call	_RetardoLCD
   417  007FEA                     l961:
   418                           
   419                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
   420  007FEA  ECEE  F03E         	call	_BorraLCD	;wreg free
   421                           
   422                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
   423  007FEE  0E0F               	movlw	15
   424  007FF0  EC28  F03F         	call	_EnviaDato
   425                           
   426                           ;LibLCDXC8.h: 102: HabilitaLCD();
   427  007FF4  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   428                           
   429                           ;LibLCDXC8.h: 103: RetardoLCD(4);
   430  007FF8  0E04               	movlw	4
   431  007FFA  EC4B  F03F         	call	_RetardoLCD
   432  007FFE  0012               	return		;funcret
   433  008000                     __end_of_InicializaLCD:
   434                           	callstack 0
   435                           
   436 ;; *************** function _BorraLCD *****************
   437 ;; Defined at:
   438 ;;		line 112 in file "LibLCDXC8.h"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   452 ;;      Params:         0       0       0       0       0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 2
   459 ;; This function calls:
   460 ;;		_EnviaDato
   461 ;;		_HabilitaLCD
   462 ;;		_RetardoLCD
   463 ;; This function is called by:
   464 ;;		_InicializaLCD
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text2
   469  007DDC                     __ptext2:
   470                           	callstack 0
   471  007DDC                     _BorraLCD:
   472                           	callstack 27
   473                           
   474                           ;LibLCDXC8.h: 114: LATD0=0;
   475                           
   476                           ;incstack = 0
   477  007DDC  908C               	bcf	3980,0,c	;volatile
   478                           
   479                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
   480  007DDE  0E01               	movlw	1
   481  007DE0  EC28  F03F         	call	_EnviaDato
   482                           
   483                           ;LibLCDXC8.h: 116: HabilitaLCD();
   484  007DE4  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   485                           
   486                           ;LibLCDXC8.h: 117: RetardoLCD(2);
   487  007DE8  0E02               	movlw	2
   488  007DEA  EC4B  F03F         	call	_RetardoLCD
   489  007DEE  0012               	return		;funcret
   490  007DF0                     __end_of_BorraLCD:
   491                           	callstack 0
   492                           
   493 ;; *************** function _EscribeLCD_c *****************
   494 ;; Defined at:
   495 ;;		line 136 in file "LibLCDXC8.h"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  a               1    wreg     unsigned char 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  a               1    4[COMRAM] unsigned char 
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   509 ;;      Params:         0       0       0       0       0       0       0       0       0
   510 ;;      Locals:         1       0       0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0
   512 ;;      Totals:         1       0       0       0       0       0       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 2
   516 ;; This function calls:
   517 ;;		_EnviaDato
   518 ;;		_HabilitaLCD
   519 ;;		_RetardoLCD
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text3
   526  007E06                     __ptext3:
   527                           	callstack 0
   528  007E06                     _EscribeLCD_c:
   529                           	callstack 28
   530                           
   531                           ;incstack = 0
   532                           ;EscribeLCD_c@a stored from wreg
   533  007E06  6E05               	movwf	EscribeLCD_c@a^0,c
   534                           
   535                           ;LibLCDXC8.h: 140: LATD0=1;
   536  007E08  808C               	bsf	3980,0,c	;volatile
   537                           
   538                           ;LibLCDXC8.h: 141: EnviaDato(a);
   539  007E0A  5005               	movf	EscribeLCD_c@a^0,w,c
   540  007E0C  EC28  F03F         	call	_EnviaDato
   541                           
   542                           ;LibLCDXC8.h: 142: HabilitaLCD();
   543  007E10  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   544                           
   545                           ;LibLCDXC8.h: 143: RetardoLCD(4);
   546  007E14  0E04               	movlw	4
   547  007E16  EC4B  F03F         	call	_RetardoLCD
   548  007E1A  0012               	return		;funcret
   549  007E1C                     __end_of_EscribeLCD_c:
   550                           	callstack 0
   551                           
   552 ;; *************** function _DireccionaLCD *****************
   553 ;; Defined at:
   554 ;;		line 238 in file "LibLCDXC8.h"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  a               1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  a               1    4[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   568 ;;      Params:         0       0       0       0       0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 2
   575 ;; This function calls:
   576 ;;		_EnviaDato
   577 ;;		_HabilitaLCD
   578 ;;		_RetardoLCD
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text4
   585  007DF0                     __ptext4:
   586                           	callstack 0
   587  007DF0                     _DireccionaLCD:
   588                           	callstack 28
   589                           
   590                           ;incstack = 0
   591                           ;DireccionaLCD@a stored from wreg
   592  007DF0  6E05               	movwf	DireccionaLCD@a^0,c
   593                           
   594                           ;LibLCDXC8.h: 241: LATD0=0;
   595  007DF2  908C               	bcf	3980,0,c	;volatile
   596                           
   597                           ;LibLCDXC8.h: 242: EnviaDato(a);
   598  007DF4  5005               	movf	DireccionaLCD@a^0,w,c
   599  007DF6  EC28  F03F         	call	_EnviaDato
   600                           
   601                           ;LibLCDXC8.h: 243: HabilitaLCD();
   602  007DFA  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   603                           
   604                           ;LibLCDXC8.h: 244: RetardoLCD(4);
   605  007DFE  0E04               	movlw	4
   606  007E00  EC4B  F03F         	call	_RetardoLCD
   607  007E04  0012               	return		;funcret
   608  007E06                     __end_of_DireccionaLCD:
   609                           	callstack 0
   610                           
   611 ;; *************** function _EnviaDato *****************
   612 ;; Defined at:
   613 ;;		line 59 in file "LibLCDXC8.h"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  a               1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  a               1    3[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         0       0       0       0       0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0
   629 ;;      Temps:          1       0       0       0       0       0       0       0       0
   630 ;;      Totals:         2       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 1
   634 ;; This function calls:
   635 ;;		_HabilitaLCD
   636 ;;		_RetardoLCD
   637 ;; This function is called by:
   638 ;;		_InicializaLCD
   639 ;;		_BorraLCD
   640 ;;		_EscribeLCD_c
   641 ;;		_DireccionaLCD
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text5
   646  007E50                     __ptext5:
   647                           	callstack 0
   648  007E50                     _EnviaDato:
   649                           	callstack 28
   650                           
   651                           ;incstack = 0
   652                           ;EnviaDato@a stored from wreg
   653  007E50  6E04               	movwf	EnviaDato@a^0,c
   654                           
   655                           ;LibLCDXC8.h: 60: if(interfaz==4){
   656  007E52  0E04               	movlw	4
   657  007E54  1808               	xorwf	_interfaz^0,w,c
   658  007E56  A4D8               	btfss	status,2,c
   659  007E58  D017               	goto	l899
   660                           
   661                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
   662  007E5A  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   663  007E5E  0EF0               	movlw	240
   664  007E60  1603               	andwf	??_EnviaDato^0,f,c
   665  007E62  508C               	movf	140,w,c	;volatile
   666  007E64  0B0F               	andlw	15
   667  007E66  1003               	iorwf	??_EnviaDato^0,w,c
   668  007E68  6E8C               	movwf	140,c	;volatile
   669                           
   670                           ;LibLCDXC8.h: 62: HabilitaLCD();
   671  007E6A  ECE7  F03E         	call	_HabilitaLCD	;wreg free
   672                           
   673                           ;LibLCDXC8.h: 63: RetardoLCD(1);
   674  007E6E  0E01               	movlw	1
   675  007E70  EC4B  F03F         	call	_RetardoLCD
   676                           
   677                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
   678  007E74  C004  F003         	movff	EnviaDato@a,??_EnviaDato
   679  007E78  3A03               	swapf	??_EnviaDato^0,f,c
   680  007E7A  0EF0               	movlw	240
   681  007E7C  1603               	andwf	??_EnviaDato^0,f,c
   682  007E7E  508C               	movf	140,w,c	;volatile
   683  007E80  0B0F               	andlw	15
   684  007E82  1003               	iorwf	??_EnviaDato^0,w,c
   685  007E84  6E8C               	movwf	140,c	;volatile
   686                           
   687                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
   688  007E86  0012               	return	
   689  007E88                     l899:
   690  007E88  0E08               	movlw	8
   691  007E8A  1808               	xorwf	_interfaz^0,w,c
   692  007E8C  A4D8               	btfss	status,2,c
   693  007E8E  0012               	return	
   694                           
   695                           ;LibLCDXC8.h: 68: LATD=a;
   696  007E90  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
   697  007E94  0012               	return		;funcret
   698  007E96                     __end_of_EnviaDato:
   699                           	callstack 0
   700                           
   701 ;; *************** function _RetardoLCD *****************
   702 ;; Defined at:
   703 ;;		line 274 in file "LibLCDXC8.h"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  a               1    wreg     unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  a               1    1[COMRAM] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   717 ;;      Params:         0       0       0       0       0       0       0       0       0
   718 ;;      Locals:         1       0       0       0       0       0       0       0       0
   719 ;;      Temps:          1       0       0       0       0       0       0       0       0
   720 ;;      Totals:         2       0       0       0       0       0       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_EnviaDato
   727 ;;		_InicializaLCD
   728 ;;		_BorraLCD
   729 ;;		_EscribeLCD_c
   730 ;;		_DireccionaLCD
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text6
   735  007E96                     __ptext6:
   736                           	callstack 0
   737  007E96                     _RetardoLCD:
   738                           	callstack 29
   739                           
   740                           ;incstack = 0
   741                           ;RetardoLCD@a stored from wreg
   742  007E96  6E02               	movwf	RetardoLCD@a^0,c
   743                           
   744                           ;LibLCDXC8.h: 275: switch(a){
   745  007E98  D01B               	goto	l887
   746  007E9A                     l877:
   747  007E9A  0E05               	movlw	5
   748  007E9C  6E01               	movwf	??_RetardoLCD^0,c
   749  007E9E  0EDE               	movlw	222
   750  007EA0                     u107:
   751  007EA0  2EE8               	decfsz	wreg,f,c
   752  007EA2  D7FE               	bra	u107
   753  007EA4  2E01               	decfsz	??_RetardoLCD^0,f,c
   754  007EA6  D7FC               	bra	u107
   755                           
   756                           ;LibLCDXC8.h: 278: break;
   757  007EA8  0012               	return	
   758  007EAA                     l879:
   759  007EAA  0E53               	movlw	83
   760  007EAC                     u117:
   761  007EAC  2EE8               	decfsz	wreg,f,c
   762  007EAE  D7FE               	bra	u117
   763  007EB0  F000               	nop	
   764                           
   765                           ;LibLCDXC8.h: 280: _delay((unsigned long)((640)*(1000000/4000000.0)));
   766  007EB2  0E35               	movlw	53
   767  007EB4                     u127:
   768  007EB4  2EE8               	decfsz	wreg,f,c
   769  007EB6  D7FE               	bra	u127
   770  007EB8  F000               	nop	
   771                           
   772                           ;LibLCDXC8.h: 282: break;
   773  007EBA  0012               	return	
   774  007EBC                     l881:
   775  007EBC  0E08               	movlw	8
   776  007EBE                     u137:
   777  007EBE  2EE8               	decfsz	wreg,f,c
   778  007EC0  D7FE               	bra	u137
   779  007EC2  F000               	nop	
   780                           
   781                           ;LibLCDXC8.h: 285: break;
   782  007EC4  0012               	return	
   783  007EC6                     l883:
   784  007EC6  0E03               	movlw	3
   785  007EC8                     u147:
   786  007EC8  2EE8               	decfsz	wreg,f,c
   787  007ECA  D7FE               	bra	u147
   788  007ECC  F000               	nop	
   789                           
   790                           ;LibLCDXC8.h: 288: break;
   791  007ECE  0012               	return	
   792  007ED0                     l887:
   793  007ED0  5002               	movf	RetardoLCD@a^0,w,c
   794                           
   795                           ; Switch size 1, requested type "simple"
   796                           ; Number of cases is 4, Range of values is 1 to 4
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte           13     7 (average)
   800                           ;	Chosen strategy is simple_byte
   801  007ED2  0A01               	xorlw	1	; case 1
   802  007ED4  B4D8               	btfsc	status,2,c
   803  007ED6  D7E1               	goto	l877
   804  007ED8  0A03               	xorlw	3	; case 2
   805  007EDA  B4D8               	btfsc	status,2,c
   806  007EDC  D7E6               	goto	l879
   807  007EDE  0A01               	xorlw	1	; case 3
   808  007EE0  B4D8               	btfsc	status,2,c
   809  007EE2  D7EC               	goto	l881
   810  007EE4  0A07               	xorlw	7	; case 4
   811  007EE6  A4D8               	btfss	status,2,c
   812  007EE8  0012               	return	
   813  007EEA  D7ED               	goto	l883
   814  007EEC                     __end_of_RetardoLCD:
   815                           	callstack 0
   816                           
   817 ;; *************** function _HabilitaLCD *****************
   818 ;; Defined at:
   819 ;;		line 105 in file "LibLCDXC8.h"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   833 ;;      Params:         0       0       0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_EnviaDato
   843 ;;		_InicializaLCD
   844 ;;		_BorraLCD
   845 ;;		_EscribeLCD_c
   846 ;;		_DireccionaLCD
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text7
   851  007DCE                     __ptext7:
   852                           	callstack 0
   853  007DCE                     _HabilitaLCD:
   854                           	callstack 29
   855                           
   856                           ;LibLCDXC8.h: 107: LATD1=1;
   857                           
   858                           ;incstack = 0
   859  007DCE  828C               	bsf	3980,1,c	;volatile
   860                           
   861                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(1000000/4000000.0)));
   862  007DD0  0E03               	movlw	3
   863  007DD2                     u157:
   864  007DD2  2EE8               	decfsz	wreg,f,c
   865  007DD4  D7FE               	bra	u157
   866  007DD6  F000               	nop	
   867                           
   868                           ;LibLCDXC8.h: 110: LATD1=0;
   869  007DD8  928C               	bcf	3980,1,c	;volatile
   870  007DDA  0012               	return		;funcret
   871  007DDC                     __end_of_HabilitaLCD:
   872                           	callstack 0
   873                           
   874 ;; *************** function _ConfiguraLCD *****************
   875 ;; Defined at:
   876 ;;		line 55 in file "LibLCDXC8.h"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  a               1    wreg     unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  a               1    0[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         1       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         1       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        1 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text8
   904  007E1C                     __ptext8:
   905                           	callstack 0
   906  007E1C                     _ConfiguraLCD:
   907                           	callstack 30
   908                           
   909                           ;incstack = 0
   910                           ;ConfiguraLCD@a stored from wreg
   911  007E1C  6E01               	movwf	ConfiguraLCD@a^0,c
   912                           
   913                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
   914  007E1E  0E04               	movlw	4
   915  007E20  1801               	xorwf	ConfiguraLCD@a^0,w,c
   916  007E22  B4D8               	btfsc	status,2,c
   917  007E24  D004               	goto	u40
   918  007E26  0E08               	movlw	8
   919  007E28  1801               	xorwf	ConfiguraLCD@a^0,w,c
   920  007E2A  A4D8               	btfss	status,2,c
   921  007E2C  0012               	return	
   922  007E2E                     u40:
   923                           
   924                           ;LibLCDXC8.h: 57: interfaz=a;
   925  007E2E  C001  F008         	movff	ConfiguraLCD@a,_interfaz
   926  007E32  0012               	return		;funcret
   927  007E34                     __end_of_ConfiguraLCD:
   928                           	callstack 0
   929  0000                     
   930                           	psect	rparam
   931  0000                     
   932                           	psect	idloc
   933                           
   934                           ;Config register IDLOC0 @ 0x200000
   935                           ;	unspecified, using default values
   936  200000                     	org	2097152
   937  200000  FF                 	db	255
   938                           
   939                           ;Config register IDLOC1 @ 0x200001
   940                           ;	unspecified, using default values
   941  200001                     	org	2097153
   942  200001  FF                 	db	255
   943                           
   944                           ;Config register IDLOC2 @ 0x200002
   945                           ;	unspecified, using default values
   946  200002                     	org	2097154
   947  200002  FF                 	db	255
   948                           
   949                           ;Config register IDLOC3 @ 0x200003
   950                           ;	unspecified, using default values
   951  200003                     	org	2097155
   952  200003  FF                 	db	255
   953                           
   954                           ;Config register IDLOC4 @ 0x200004
   955                           ;	unspecified, using default values
   956  200004                     	org	2097156
   957  200004  FF                 	db	255
   958                           
   959                           ;Config register IDLOC5 @ 0x200005
   960                           ;	unspecified, using default values
   961  200005                     	org	2097157
   962  200005  FF                 	db	255
   963                           
   964                           ;Config register IDLOC6 @ 0x200006
   965                           ;	unspecified, using default values
   966  200006                     	org	2097158
   967  200006  FF                 	db	255
   968                           
   969                           ;Config register IDLOC7 @ 0x200007
   970                           ;	unspecified, using default values
   971  200007                     	org	2097159
   972  200007  FF                 	db	255
   973                           
   974                           	psect	config
   975                           
   976                           ;Config register CONFIG1L @ 0x300000
   977                           ;	unspecified, using default values
   978                           ;	PLL Prescaler Selection bits
   979                           ;	PLLDIV = 0x0, unprogrammed default
   980                           ;	System Clock Postscaler Selection bits
   981                           ;	CPUDIV = 0x0, unprogrammed default
   982                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   983                           ;	USBDIV = 0x0, unprogrammed default
   984  300000                     	org	3145728
   985  300000  00                 	db	0
   986                           
   987                           ;Config register CONFIG1H @ 0x300001
   988                           ;	Oscillator Selection bits
   989                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   990                           ;	Fail-Safe Clock Monitor Enable bit
   991                           ;	FCMEN = 0x0, unprogrammed default
   992                           ;	Internal/External Oscillator Switchover bit
   993                           ;	IESO = 0x0, unprogrammed default
   994  300001                     	org	3145729
   995  300001  09                 	db	9
   996                           
   997                           ;Config register CONFIG2L @ 0x300002
   998                           ;	unspecified, using default values
   999                           ;	Power-up Timer Enable bit
  1000                           ;	PWRT = 0x1, unprogrammed default
  1001                           ;	Brown-out Reset Enable bits
  1002                           ;	BOR = 0x3, unprogrammed default
  1003                           ;	Brown-out Reset Voltage bits
  1004                           ;	BORV = 0x3, unprogrammed default
  1005                           ;	USB Voltage Regulator Enable bit
  1006                           ;	VREGEN = 0x0, unprogrammed default
  1007  300002                     	org	3145730
  1008  300002  1F                 	db	31
  1009                           
  1010                           ;Config register CONFIG2H @ 0x300003
  1011                           ;	Watchdog Timer Enable bit
  1012                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1013                           ;	Watchdog Timer Postscale Select bits
  1014                           ;	WDTPS = 0xF, unprogrammed default
  1015  300003                     	org	3145731
  1016  300003  1E                 	db	30
  1017                           
  1018                           ; Padding undefined space
  1019  300004                     	org	3145732
  1020  300004  FF                 	db	255
  1021                           
  1022                           ;Config register CONFIG3H @ 0x300005
  1023                           ;	unspecified, using default values
  1024                           ;	CCP2 MUX bit
  1025                           ;	CCP2MX = 0x1, unprogrammed default
  1026                           ;	PORTB A/D Enable bit
  1027                           ;	PBADEN = 0x1, unprogrammed default
  1028                           ;	Low-Power Timer 1 Oscillator Enable bit
  1029                           ;	LPT1OSC = 0x0, unprogrammed default
  1030                           ;	MCLR Pin Enable bit
  1031                           ;	MCLRE = 0x1, unprogrammed default
  1032  300005                     	org	3145733
  1033  300005  83                 	db	131
  1034                           
  1035                           ;Config register CONFIG4L @ 0x300006
  1036                           ;	unspecified, using default values
  1037                           ;	Stack Full/Underflow Reset Enable bit
  1038                           ;	STVREN = 0x1, unprogrammed default
  1039                           ;	Single-Supply ICSP Enable bit
  1040                           ;	LVP = 0x1, unprogrammed default
  1041                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1042                           ;	ICPRT = 0x0, unprogrammed default
  1043                           ;	Extended Instruction Set Enable bit
  1044                           ;	XINST = 0x0, unprogrammed default
  1045                           ;	Background Debugger Enable bit
  1046                           ;	DEBUG = 0x1, unprogrammed default
  1047  300006                     	org	3145734
  1048  300006  85                 	db	133
  1049                           
  1050                           ; Padding undefined space
  1051  300007                     	org	3145735
  1052  300007  FF                 	db	255
  1053                           
  1054                           ;Config register CONFIG5L @ 0x300008
  1055                           ;	unspecified, using default values
  1056                           ;	Code Protection bit
  1057                           ;	CP0 = 0x1, unprogrammed default
  1058                           ;	Code Protection bit
  1059                           ;	CP1 = 0x1, unprogrammed default
  1060                           ;	Code Protection bit
  1061                           ;	CP2 = 0x1, unprogrammed default
  1062                           ;	Code Protection bit
  1063                           ;	CP3 = 0x1, unprogrammed default
  1064  300008                     	org	3145736
  1065  300008  0F                 	db	15
  1066                           
  1067                           ;Config register CONFIG5H @ 0x300009
  1068                           ;	unspecified, using default values
  1069                           ;	Boot Block Code Protection bit
  1070                           ;	CPB = 0x1, unprogrammed default
  1071                           ;	Data EEPROM Code Protection bit
  1072                           ;	CPD = 0x1, unprogrammed default
  1073  300009                     	org	3145737
  1074  300009  C0                 	db	192
  1075                           
  1076                           ;Config register CONFIG6L @ 0x30000A
  1077                           ;	unspecified, using default values
  1078                           ;	Write Protection bit
  1079                           ;	WRT0 = 0x1, unprogrammed default
  1080                           ;	Write Protection bit
  1081                           ;	WRT1 = 0x1, unprogrammed default
  1082                           ;	Write Protection bit
  1083                           ;	WRT2 = 0x1, unprogrammed default
  1084                           ;	Write Protection bit
  1085                           ;	WRT3 = 0x1, unprogrammed default
  1086  30000A                     	org	3145738
  1087  30000A  0F                 	db	15
  1088                           
  1089                           ;Config register CONFIG6H @ 0x30000B
  1090                           ;	unspecified, using default values
  1091                           ;	Configuration Register Write Protection bit
  1092                           ;	WRTC = 0x1, unprogrammed default
  1093                           ;	Boot Block Write Protection bit
  1094                           ;	WRTB = 0x1, unprogrammed default
  1095                           ;	Data EEPROM Write Protection bit
  1096                           ;	WRTD = 0x1, unprogrammed default
  1097  30000B                     	org	3145739
  1098  30000B  E0                 	db	224
  1099                           
  1100                           ;Config register CONFIG7L @ 0x30000C
  1101                           ;	unspecified, using default values
  1102                           ;	Table Read Protection bit
  1103                           ;	EBTR0 = 0x1, unprogrammed default
  1104                           ;	Table Read Protection bit
  1105                           ;	EBTR1 = 0x1, unprogrammed default
  1106                           ;	Table Read Protection bit
  1107                           ;	EBTR2 = 0x1, unprogrammed default
  1108                           ;	Table Read Protection bit
  1109                           ;	EBTR3 = 0x1, unprogrammed default
  1110  30000C                     	org	3145740
  1111  30000C  0F                 	db	15
  1112                           
  1113                           ;Config register CONFIG7H @ 0x30000D
  1114                           ;	unspecified, using default values
  1115                           ;	Boot Block Table Read Protection bit
  1116                           ;	EBTRB = 0x1, unprogrammed default
  1117  30000D                     	org	3145741
  1118  30000D  40                 	db	64
  1119                           tosu	equ	0xFFF
  1120                           tosh	equ	0xFFE
  1121                           tosl	equ	0xFFD
  1122                           stkptr	equ	0xFFC
  1123                           pclatu	equ	0xFFB
  1124                           pclath	equ	0xFFA
  1125                           pcl	equ	0xFF9
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           prodh	equ	0xFF4
  1131                           prodl	equ	0xFF3
  1132                           indf0	equ	0xFEF
  1133                           postinc0	equ	0xFEE
  1134                           postdec0	equ	0xFED
  1135                           preinc0	equ	0xFEC
  1136                           plusw0	equ	0xFEB
  1137                           fsr0h	equ	0xFEA
  1138                           fsr0l	equ	0xFE9
  1139                           wreg	equ	0xFE8
  1140                           indf1	equ	0xFE7
  1141                           postinc1	equ	0xFE6
  1142                           postdec1	equ	0xFE5
  1143                           preinc1	equ	0xFE4
  1144                           plusw1	equ	0xFE3
  1145                           fsr1h	equ	0xFE2
  1146                           fsr1l	equ	0xFE1
  1147                           bsr	equ	0xFE0
  1148                           indf2	equ	0xFDF
  1149                           postinc2	equ	0xFDE
  1150                           postdec2	equ	0xFDD
  1151                           preinc2	equ	0xFDC
  1152                           plusw2	equ	0xFDB
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DireccionaLCD
    _main->_EscribeLCD_c
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              5 COMRAM     2     2      0
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       8       1        8.4%
BITBIGSFRl          2C      0       0      23        0.0%
BITBIGSFRhl          8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      18        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 25 12:34:41 2022

                     u40 7E2E                       u97 7EFE               EnviaDato@a 0004  
          _InicializaLCD 7F64                      l118 7F62                      l921 7F76  
                    l931 7F94                      l941 7FB2                      l881 7EBC  
                    l961 7FEA                      l883 7EC6                      l877 7E9A  
                    l879 7EAA                      l887 7ED0                      l899 7E88  
                    u107 7EA0                      u117 7EAC                      u127 7EB4  
                    u137 7EBE                      u147 7EC8                      u157 7DD2  
                    wreg 000FE8                     _LATD 000F8C           ??_EscribeLCD_c 0005  
                   _main 7EEC                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 0001                    ?_main 0001            EscribeLCD_c@a 0005  
                  _LATD0 007C60                    _LATD1 007C61                    _TRISD 000F95  
                  tablat 000FF5              _HabilitaLCD 7DCE                    status 000FD8  
       __end_of_BorraLCD 7DF0          __initialization 7E34             __end_of_main 7F64  
                 ??_main 0006     __end_of_ConfiguraLCD 7E34            __activetblptr 000002  
         DireccionaLCD@a 0005    __end_of_DireccionaLCD 7E06               _RetardoLCD 7E96  
        ??_InicializaLCD 0005                   isa$std 000001     __end_of_EscribeLCD_c 7E1C  
           __pdataCOMRAM 0008                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7E46  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 7E96  
              ?_BorraLCD 0001              ?_RetardoLCD 0001              RetardoLCD@a 0002  
             ??_BorraLCD 0005             ?_HabilitaLCD 0001             _ConfiguraLCD 7E1C  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E34  
                __ramtop 0800                  __ptext0 7EEC                  __ptext1 7F64  
                __ptext2 7DDC                  __ptext3 7E06                  __ptext4 7DF0  
                __ptext5 7E50                  __ptext6 7E96                  __ptext7 7DCE  
                __ptext8 7E1C     end_of_initialization 7E46            __Lmediumconst 0000  
           _EscribeLCD_c 7E06            __pidataCOMRAM 7DCD    __end_of_InicializaLCD 8000  
              _EnviaDato 7E50      start_initialization 7E34             ??_RetardoLCD 0001  
             ?_EnviaDato 0001       __end_of_RetardoLCD 7EEC            _DireccionaLCD 7DF0  
         ?_DireccionaLCD 0001              ??_EnviaDato 0003                 _BorraLCD 7DDC  
               __Hrparam 0000                 __Lrparam 0000            ConfiguraLCD@a 0001  
        ??_DireccionaLCD 0005                 _interfaz 0008                 isa$xinst 000000  
          ??_HabilitaLCD 0001            ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0001  
          ?_EscribeLCD_c 0001      __end_of_HabilitaLCD 7DDC  
